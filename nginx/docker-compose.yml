version: '3.8'

services:
  letscloud-api-gateway:
    build:
      context: ..
      dockerfile: nginx/Dockerfile
    container_name: letscloud-api-gateway
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      # Mount SSL certificates (optional - for production)
      - ./ssl:/etc/nginx/ssl:ro
      # Mount logs
      - ./logs:/var/log/nginx
      # Mount custom configuration (optional)
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    environment:
      - NGINX_HOST=api-docs.yourdomain.com
      - NGINX_PORT=443
    restart: unless-stopped
    networks:
      - letscloud-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Redis for caching (if needed)
  redis:
    image: redis:alpine
    container_name: letscloud-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - letscloud-network
    command: redis-server --appendonly yes

  # Optional: Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: letscloud-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    restart: unless-stopped
    networks:
      - letscloud-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: letscloud-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    networks:
      - letscloud-network

volumes:
  redis-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  letscloud-network:
    driver: bridge
